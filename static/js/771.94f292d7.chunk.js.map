{"version":3,"file":"static/js/771.94f292d7.chunk.js","mappings":"sNAAaA,EAAe,CAC1BC,MAAO,GACPC,SAAU,ICFCC,EACJ,CACLC,KAAM,QACNC,KAAM,QACNC,UAAU,EACVC,YAAa,oBALJJ,EAOD,CACRC,KAAM,WACNC,KAAM,WACNC,UAAU,EACVC,YAAa,uBCVjB,EAAuB,wBAAvB,EAAmD,qBAAnD,EAA4E,qBAA5E,EAAyG,yBAAzG,EAA0I,yBAA1I,EAA4K,0BAA5K,EAA2M,sB,SCO9LC,EAAY,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC1B,GAA0BC,EAAAA,EAAAA,WAAS,UAAKV,IAAxC,eAAOW,EAAP,KAAcC,EAAd,KAEMC,GAAeC,EAAAA,EAAAA,cACnB,YAAiB,IAAdC,EAAa,EAAbA,OACOV,EAAgBU,EAAhBV,KAAMW,EAAUD,EAAVC,MACdJ,GAAS,SAAAK,GACP,OAAO,kBAAKA,GAAZ,cAAwBZ,EAAOW,GAChC,GACF,GACD,CAACJ,IASKX,EAAoBU,EAApBV,MAAOC,EAAaS,EAAbT,SAEf,OACE,kBAAMO,SATa,SAAAS,GACnBA,EAAEC,iBACFV,GAAS,UAAKE,IACdC,GAAS,UAAKZ,GACf,EAK+BoB,UAAWC,EAAzC,WACE,eAAID,UAAWC,EAAf,oBACA,kBAAOD,UAAWC,EAAlB,UACE,0BACED,UAAWC,EACXL,MAAOf,EACPqB,SAAUT,GACNV,OAGR,kBAAOiB,UAAWC,EAAlB,UACE,0BACED,UAAWC,EACXL,MAAOd,EACPoB,SAAUT,GACNV,OAGR,mBAAQiB,UAAWC,EAAejB,KAAK,SAAvC,UACE,cAAGgB,UAAWC,EAAd,sBAEF,cAAGD,UAAWC,EAAd,+CAGL,E,uCCpDYE,E,QAAWC,EAAAA,OAAa,CACnCC,QAAS,2CAGLC,EAAW,SAAAC,GACf,GAAIA,EACF,OAAQJ,EAASK,SAASC,QAAQC,cAA1B,iBAAoDH,GAE9DJ,EAASK,SAASC,QAAQC,cAAgB,EAC3C,EAEYC,EAAK,mCAAG,WAAMC,GAAN,yFACIT,EAASU,KAAK,gBAAiBD,GADnC,uBACXE,EADW,EACXA,KACRR,EAASQ,EAAKP,OAFK,kBAGZO,GAHY,2CAAH,sDCTLH,GAAQI,EAAAA,EAAAA,IACnB,aADmC,mCAEnC,WAAOD,EAAP,qFAAeE,EAAf,EAAeA,gBAAf,kBAEyBC,EAAcH,GAFvC,cAEUI,EAFV,yBAGWA,GAHX,uCAIaC,EAJb,KAIaA,SAJb,kBAKWH,EAAgBG,IAL3B,yDAFmC,yDCE/BC,EAAc,SAAC,GAAD,SAAGC,KAAgBC,OAAnB,EAoBpB,EAlBkB,WAChB,IAAMA,GAAUC,EAAAA,EAAAA,IAAYH,GACtBI,GAAWC,EAAAA,EAAAA,MAMjB,OAAIH,GACK,SAAC,KAAD,CAAUI,GAAG,eAGpB,0BACE,SAACtC,EAAD,CAAWC,SATM,SAAAyB,GACnBU,EAASb,EAAMG,GAChB,KAUF,C","sources":["components/LoginForm/initialState.jsx","components/LoginForm/fields.jsx","webpack://your_pet/./src/components/LoginForm/LoginForm.module.css?4ac5","components/LoginForm/LoginForm.jsx","pages/LoginPage/authApi.js","pages/LoginPage/authOperations.js","pages/LoginPage/LoginPage.jsx"],"sourcesContent":["export const initialState = {\n  email: '',\n  password: '',\n};\n","export const fields = {\n  email: {\n    type: 'email',\n    name: 'email',\n    required: true,\n    placeholder: 'Enter your email',\n  },\n  password: {\n    type: 'password',\n    name: 'password',\n    required: true,\n    placeholder: 'Enter your password',\n  },\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"LoginForm_form__gPEx5\",\"h\":\"LoginForm_h__fj8ap\",\"p\":\"LoginForm_p__7P1Yo\",\"label\":\"LoginForm_label__F7sLE\",\"input\":\"LoginForm_input__aQRtt\",\"button\":\"LoginForm_button__LodJg\",\"pp\":\"LoginForm_pp__2hSsc\"};","import { useState, useCallback } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { initialState } from './initialState';\nimport { fields } from './fields';\n\nimport styles from './LoginForm.module.css';\n\nexport const LoginForm = ({ onSubmit }) => {\n  const [state, setState] = useState({ ...initialState });\n\n  const handleChange = useCallback(\n    ({ target }) => {\n      const { name, value } = target;\n      setState(prevState => {\n        return { ...prevState, [name]: value };\n      });\n    },\n    [setState]\n  );\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit({ ...state });\n    setState({ ...initialState });\n  };\n\n  const { email, password } = state;\n\n  return (\n    <form onSubmit={handleSubmit} className={styles.form}>\n      <h2 className={styles.h}>Login</h2>\n      <label className={styles.label}>\n        <input\n          className={styles.input}\n          value={email}\n          onChange={handleChange}\n          {...fields.email}\n        />\n      </label>\n      <label className={styles.label}>\n        <input\n          className={styles.input}\n          value={password}\n          onChange={handleChange}\n          {...fields.password}\n        />\n      </label>\n      <button className={styles.button} type=\"submit\">\n        <p className={styles.pp}>Login</p>\n      </button>\n      <p className={styles.p}>Don't have an account? Register</p>\n    </form>\n  );\n};\n\nLoginForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import axios from 'axios';\n\nexport const instance = axios.create({\n  baseURL: 'https://connections-api.herokuapp.com/',\n});\n\nconst setToken = token => {\n  if (token) {\n    return (instance.defaults.headers.authorization = `Bearer ${token}`);\n  }\n  instance.defaults.headers.authorization = '';\n};\n\nexport const login = async userData => {\n  const { data } = await instance.post('/users/login/', userData);\n  setToken(data.token);\n  return data;\n};\n","import { createAsyncThunk } from '@reduxjs/toolkit';\n\nimport * as authApi from './authApi';\n\nexport const login = createAsyncThunk(\n  'auth/login',\n  async (data, { rejectWithValue }) => {\n    try {\n      const result = await authApi.login(data);\n      return result;\n    } catch ({ response }) {\n      return rejectWithValue(response);\n    }\n  }\n);\n","import { useSelector, useDispatch } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\n\nimport { LoginForm } from '../../components/LoginForm/LoginForm';\nimport { login } from './authOperations';\n\nconst isUserLogin = ({ auth }) => auth.isLogin;\n\nconst LoginPage = () => {\n  const isLogin = useSelector(isUserLogin);\n  const dispatch = useDispatch();\n\n  const handleSignup = data => {\n    dispatch(login(data));\n  };\n\n  if (isLogin) {\n    return <Navigate to=\"/contacts\" />;\n  }\n  return (\n    <div>\n      <LoginForm onSubmit={handleSignup} />\n    </div>\n  );\n};\n\nexport default LoginPage;\n"],"names":["initialState","email","password","fields","type","name","required","placeholder","LoginForm","onSubmit","useState","state","setState","handleChange","useCallback","target","value","prevState","e","preventDefault","className","styles","onChange","instance","axios","baseURL","setToken","token","defaults","headers","authorization","login","userData","post","data","createAsyncThunk","rejectWithValue","authApi","result","response","isUserLogin","auth","isLogin","useSelector","dispatch","useDispatch","to"],"sourceRoot":""}