{"version":3,"file":"static/js/25.7429213e.chunk.js","mappings":"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","sources":["pages/RegisterPage/RegisterForm/RegisterModal/Modal.jsx","pages/RegisterPage/RegisterForm/fields.js","pages/RegisterPage/RegisterForm/initialState.js","webpack://your_pet/./src/pages/RegisterPage/RegisterForm/register-form.module.scss?d94d","pages/RegisterPage/RegisterForm/RegisterForm.jsx","webpack://your_pet/./src/pages/RegisterPage/register-page.module.css?a0d0","pages/RegisterPage/RegisterPage.jsx"],"sourcesContent":["import React from 'react';\n\nimport './modal.css';\n\nconst Modal = ({ active, setActive, children }) => {\n  document.addEventListener('keydown', e => {\n    if (e.key === 'Escape') {\n      setActive(false);\n      console.log('elrfghecorvno');\n      // <NavLink to=\"/user\" />;\n      setTimeout(() => {\n        document.location.replace('/YourPet/user');\n      }, 50);\n    }\n  });\n\n  return (\n    <div\n      className={active ? 'modal active' : 'modal'}\n      onClick={() => {\n        setActive(false);\n        document.location.replace('/YourPet/user');\n      }}\n    >\n      <div\n        className={active ? 'modal__content active' : 'modal__content'}\n        onClick={e => {\n          e.stopPropagation();\n        }}\n      >\n        {children}\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;\n","const fields = {\n  // name: {\n  //   type: \"text\",\n  //   name: \"name\",\n  //   required: true,\n  //   label: \"User name:\",\n  //   placeholder: \"Enter name\",\n  // },\n  email: {\n    type: 'email',\n    name: 'email',\n    required: true,\n    label: 'User email:',\n    placeholder: 'Enter email',\n  },\n  password: {\n    type: 'password',\n    name: 'password',\n    required: true,\n    label: 'User password:',\n    placeholder: 'Enter password',\n  },\n  confirmPassword: {\n    type: 'text',\n    name: 'confirmPassword',\n    required: true,\n    label: 'User password:',\n    placeholder: 'Confirm password',\n  },\n};\n\nexport default fields;\n","const initialState = {\n  // name: '',\n  email: '',\n  password: '',\n  confirmPassword: '',\n};\n\nexport default initialState;\n","// extracted by mini-css-extract-plugin\nexport default {\"formik\":\"register-form_formik__RyRqW\",\"title\":\"register-form_title__K1ixr\",\"wrapper\":\"register-form_wrapper__a4PVQ\",\"field\":\"register-form_field__xu2al\",\"button\":\"register-form_button__b4fDA\",\"p\":\"register-form_p__qFdoA\",\"login\":\"register-form_login__pZhUK\",\"modal_title\":\"register-form_modal_title__QfH5L\",\"modal_button\":\"register-form_modal_button__9dt9r\",\"modal__button_text\":\"register-form_modal__button_text__aqdKD\",\"modal_button_items\":\"register-form_modal_button_items__gxzCZ\"};","// import React, { useState, memo } from 'react';\nimport React from 'react';\nimport { NavLink } from 'react-router-dom/dist';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\n// import { Formik, Form, Field } from 'formik';\n\n// import UserPage from '../../UserPage/UserPage';\n\nimport fields from './fields';\nimport initialState from './initialState';\nimport styles from './register-form.module.scss';\n// import Modal from './RegisterModal/Modal';\n// import PasswordField from './PasswordField';\n\nconst RegisterForm = ({ onSubmit }) => {\n  // const [modalActive, setModalActive] = useState(false);\n  const handleSignup = onSubmit;\n  console.log('onSubmit', handleSignup);\n\n  // const [isRegistered, setIsRegistered] = useState(false);\n  // let isRegistered = false;\n\n  // const verify =\n\n  // Email in DB (boolean)\n  // const emailIsNew = await(email => {\n  //   console.log(email);\n  //   return true;\n  // });\n  // const emailTrue = emailIsNew({ email });\n  // console.log(emailTrue);\n  // if (!emailTrue) return alert('This email in use');\n\n  // function verifySubmit(values, submitProps) {\n  // const verifySubmit = (values, submitProps) => {\n    // const { email, confirmPassword, password } = values;\n    // const { email, password } = values;\n\n    // Check password and confirmPassword (boolean)\n    // console.log(password, confirmPassword, this.state);\n    // if (password !== confirmPassword)\n    //   return alert('confirmPassword must be same like password');\n\n    // Registration success (boolean)\n    // const data = { email, password };\n    // console.log(data);\n    // const regSuccess = data => {\n    //   return true;\n    // };\n\n    // if (true) {\n    //   submitProps.setSubmitting(false);\n    //   submitProps.resetForm();\n    //   // setModalActive(true);\n    //   return true;\n    // }\n\n    // await new Promise(resolve => setTimeout(resolve, 500));                {email: 'lm@gmail.com', id: '6469fe36859c1ddf0370b049'}\n    // alert(JSON.stringify(data, null, 2));\n  // };\n\n  return (\n    <div>\n      <div>\n        {/* {modalActive && <UserPage />}\n\n        <Modal active={modalActive} setActive={setModalActive}>\n          <h2 className={styles.title}>Congrats!</h2>\n          <h3 className={styles.modal_title}> Youre registration is success</h3>\n          <button className={styles.modal_button}>\n            <div className={styles.modal_button_items}>\n              <a href=\"/YourPet/user\" className={styles.modal__button_text}>\n                Go to profile\n              </a>\n            </div>\n          </button>\n        </Modal> */}\n        {/* {modalActive && document.location.replace('/user')} */}\n      </div>\n\n      <section className={styles.formik}>\n        <h2 className={styles.title}>Registration</h2>\n        <Formik\n          initialValues={initialState}\n          // onSubmit={(verifySubmit(), handleSignup, setModalActive(true))}\n          onSubmit={handleSignup}\n          // onSubmit={handleSignup}\n          enableReinitialize\n        >\n          <Form className={styles.form}>\n            <div className={styles.wrapper}>\n              <Field name=\"email\" {...fields.email} className={styles.field} />\n              <ErrorMessage name=\"email\" component=\"div\" />\n              <Field\n                name=\"password\"\n                {...fields.password}\n                className={styles.field}\n              />\n              <ErrorMessage name=\"password\" component=\"div\" />\n              <Field\n                name=\"confirmPassword\"\n                {...fields.confirmPassword}\n                className={styles.field}\n              />\n              <ErrorMessage name=\"confirmPassword\" component=\"div\" />\n              {/* <PasswordField /> */}\n            </div>\n            <button className={styles.button} type=\"submit\">\n              Registration\n            </button>\n            <p className={styles.p}>\n              Already have an account?{' '}\n              <NavLink className={styles.login} to=\"/login\">\n                Login\n              </NavLink>\n            </p>\n          </Form>\n        </Formik>\n      </section>\n    </div>\n  );\n};\n\nexport default RegisterForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"div\":\"register-page_div__XN8R4\",\"title\":\"register-page_title__HKJZ2\",\"modal\":\"register-page_modal__MEOKP\"};","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { NavLink } from 'react-router-dom/dist';\n\nimport UserPage from '../UserPage/UserPage';\nimport Modal from './RegisterForm/RegisterModal/Modal';\n\nimport { signup } from '../../redux/auth/auth-operations';\n\nimport RegisterForm from './RegisterForm/RegisterForm';\nimport Container from 'components/Container/Container';\nimport css from './register-page.module.css';\nimport styles from './RegisterForm/register-form.module.scss';\nimport pawprint from 'images/pawprint.svg';\n\nconst RegisterPage = () => {\n  const [modalActive, setModalActive] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const handleSignup = data => {\n    const { email, password, confirmPassword } = data;\n    const dataSent = { email, password };\n    console.log(data);\n    // setModalActive(true);\n    // Check password and confirmPassword (boolean)\n    console.log(password, confirmPassword);\n    if (password !== confirmPassword)\n      return alert('confirmPassword must be same like password');\n\n    const sendData = async () => {\n      try {\n        const result = await dispatch(signup(dataSent));\n        console.log(result);\n        const { payload } = result;\n        if (payload.id) {\n          setModalActive(true);\n          localStorage.setItem('user', JSON.stringify(payload));\n        }\n        if (payload.status === 409) return alert('Email in use');\n      } catch ({ response }) {\n        console.log(response.error.message);\n      }\n    };\n    sendData();\n  };\n\n  return (\n    <Container>\n      {modalActive && <UserPage />}\n      <Modal active={modalActive} setActive={setModalActive}>\n        <h2 className={styles.title}>Congrats!</h2>\n        <h3 className={styles.modal_title}> Youre registration is success</h3>\n        <button className={styles.modal_button}>\n          <div className={styles.modal_button_items}>\n            <NavLink to=\"/user\" className={styles.modal__button_text}>\n              Go to profile\n            </NavLink>\n            <img src={pawprint} alt=\"pawprint\" />\n          </div>\n        </button>\n      </Modal>\n      <div className={css.div}>\n        <RegisterForm onSubmit={handleSignup} />\n      </div>\n    </Container>\n  );\n};\n\nexport default RegisterPage;\n"],"names":["active","setActive","children","document","addEventListener","e","key","console","log","setTimeout","location","replace","className","onClick","stopPropagation","email","type","name","required","label","placeholder","password","confirmPassword","handleSignup","onSubmit","styles","initialValues","initialState","enableReinitialize","fields","component","to","useState","modalActive","setModalActive","dispatch","useDispatch","Container","UserPage","src","pawprint","alt","css","data","dataSent","alert","sendData","signup","result","payload","id","localStorage","setItem","JSON","stringify","status","response","error","message"],"sourceRoot":""}